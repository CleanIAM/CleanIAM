// <auto-generated/>
#pragma warning disable
using Wolverine.Marten.Publishing;

namespace Internal.Generated.WolverineHandlers
{
    // START: CreateNewUserCommandHandler767585574
    public class CreateNewUserCommandHandler767585574 : Wolverine.Runtime.Handlers.MessageHandler
    {
        private readonly Wolverine.Marten.Publishing.OutboxedSessionFactory _outboxedSessionFactory;

        public CreateNewUserCommandHandler767585574(Wolverine.Marten.Publishing.OutboxedSessionFactory outboxedSessionFactory)
        {
            _outboxedSessionFactory = outboxedSessionFactory;
        }



        public override async System.Threading.Tasks.Task HandleAsync(Wolverine.Runtime.MessageContext context, System.Threading.CancellationToken cancellation)
        {
            var passwordHasher = new Identity.Infrastructure.Services.PasswordHasher();
            // Building the Marten session
            await using var documentSession = _outboxedSessionFactory.OpenSession(context);
            // Building the Marten session
            await using var querySession = _outboxedSessionFactory.QuerySession(context);
            // The actual message body
            var createNewUserCommand = (Identity.Application.Commands.Users.CreateNewUserCommand)context.Envelope.Message;

            System.Diagnostics.Activity.Current?.SetTag("message.handler", "Identity.Application.Commands.Users.CreateNewUserCommandHandler");
            var result = await Identity.Application.Commands.Users.CreateNewUserCommandHandler.LoadAsync(createNewUserCommand, querySession, cancellation).ConfigureAwait(false);
            
            // The actual message execution
            var outgoing1 = await Identity.Application.Commands.Users.CreateNewUserCommandHandler.Handle(createNewUserCommand, result, documentSession, passwordHasher, cancellation).ConfigureAwait(false);

            
            // Outgoing, cascaded message
            await context.EnqueueCascadingAsync(outgoing1).ConfigureAwait(false);

            
            // Save all pending changes to this Marten session
            await documentSession.SaveChangesAsync(cancellation).ConfigureAwait(false);

            
            // Have to flush outgoing messages just in case Marten did nothing because of https://github.com/JasperFx/wolverine/issues/536
            await context.FlushOutgoingMessagesAsync().ConfigureAwait(false);

        }

    }

    // END: CreateNewUserCommandHandler767585574
    
    
}

