using CleanIAM.Events.Core.Events.Users;
using CleanIAM.Identity.Core.Requests;
using CleanIAM.Identity.Core.Users;
using Marten;

namespace CleanIAM.Identity.Application.EventHandlers.Users;

/// <summary>
/// Handles the UserDeleted event generated by ManagementPortal and deletes the corresponding user from the database.
/// </summary>
public class UserDeletedEventHandler
{
    public static async Task Handle(UserDeleted userDeleted, IDocumentSession session,
        CancellationToken cancellationToken)
    {
        // Delete the user from the database
        session.Delete<IdentityUser>(userDeleted.Id);
        // Delete all other objects associated with the user
        session.DeleteWhere<EmailVerificationReqest>(r => r.UserId == userDeleted.Id);
        session.DeleteWhere<InvitationRequest>(r => r.UserId == userDeleted.Id);
        session.DeleteWhere<PasswordResetRequest>(r => r.UserId == userDeleted.Id);

        await session.SaveChangesAsync(cancellationToken);
    }
}